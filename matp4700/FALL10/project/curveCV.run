reset;
model curvefitCV.mod;
data ddd.dat;
display C, eps;
let TRAIN := {1..n};
let TEST := {};
solve;
display w,b,objective,C * sum{j in 1..m} wabs[j],errorTRAIN;
display C, eps >> out5b;
display w,b >> out5b;
let TRAIN := {1..20};
let TEST := {((20)+1)..n};
solve;
display w,b,objective,C * sum{j in 1..m} wabs[j],errorTRAIN,TESTval;
#let va := TESTval;
let va := sum{i in TEST} abs(error[i]);
let TEST := {1..20};
let TRAIN := {((20)+1)..n};
solve;
display w,b,objective,C * sum{j in 1..m} wabs[j],errorTRAIN,TESTval;
#let vb := TESTval;
let vb := sum{i in TEST} abs(error[i]);
display C, eps >> out5c;
display va+vb;
display va,vb,va+vb >> out5c;

reset;
model curvefitCV.mod;
let eps := 0.3;
data ddd.dat;
display C, eps;
let TRAIN := {1..n};
let TEST := {};
solve;
display w,b,objective,C * sum{j in 1..m} wabs[j],errorTRAIN;
display C, eps >> out5b;
display w,b >> out5b;
let TRAIN := {1..20};
let TEST := {((20)+1)..n};
solve;
display w,b,objective,C * sum{j in 1..m} wabs[j],errorTRAIN,TESTval;
#let va := TESTval;
let va := sum{i in TEST} abs(error[i]);
let TEST := {1..20};
let TRAIN := {((20)+1)..n};
solve;
display w,b,objective,C * sum{j in 1..m} wabs[j],errorTRAIN,TESTval;
#let vb := TESTval;
let vb := sum{i in TEST} abs(error[i]);
display C, eps >> out5c;
display va+vb;
display va,vb,va+vb >> out5c;

reset;
model curvefitCV.mod;
data ddd.dat;
let eps := 0;
display C, eps;
let TRAIN := {1..n};
let TEST := {};
solve;
display w,b,objective,C * sum{j in 1..m} wabs[j],errorTRAIN;
display C, eps >> out5b;
display w,b >> out5b;
let TRAIN := {1..20};
let TEST := {((20)+1)..n};
solve;
display w,b,objective,C * sum{j in 1..m} wabs[j],errorTRAIN,TESTval;
#let va := TESTval;
let va := sum{i in TEST} abs(error[i]);
let TEST := {1..20};
let TRAIN := {((20)+1)..n};
solve;
display w,b,objective,C * sum{j in 1..m} wabs[j],errorTRAIN,TESTval;
#let vb := TESTval;
let vb := sum{i in TEST} abs(error[i]);
display C, eps >> out5c;
display va+vb;
display va,vb,va+vb >> out5c;

reset;
model curvefitCV.mod;
data ddd.dat;
let C := 1;
display C, eps;
let TRAIN := {1..n};
let TEST := {};
solve;
display w,b,objective,C * sum{j in 1..m} wabs[j],errorTRAIN;
display C, eps >> out5b;
display w,b >> out5b;
let TRAIN := {1..20};
let TEST := {((20)+1)..n};
solve;
display w,b,objective,C * sum{j in 1..m} wabs[j],errorTRAIN,TESTval;
#let va := TESTval;
let va := sum{i in TEST} abs(error[i]);
let TEST := {1..20};
let TRAIN := {((20)+1)..n};
solve;
display w,b,objective,C * sum{j in 1..m} wabs[j],errorTRAIN,TESTval;
#let vb := TESTval;
let vb := sum{i in TEST} abs(error[i]);
display C, eps >> out5c;
display va+vb;
display va,vb,va+vb >> out5c;

reset;
model curvefitCV.mod;
let C := 1;
let eps := 0.3;
data ddd.dat;
display C, eps;
let TRAIN := {1..n};
let TEST := {};
solve;
display w,b,objective,C * sum{j in 1..m} wabs[j],errorTRAIN;
display C, eps >> out5b;
display w,b >> out5b;
let TRAIN := {1..20};
let TEST := {((20)+1)..n};
solve;
display w,b,objective,C * sum{j in 1..m} wabs[j],errorTRAIN,TESTval;
#let va := TESTval;
let va := sum{i in TEST} abs(error[i]);
let TEST := {1..20};
let TRAIN := {((20)+1)..n};
solve;
display w,b,objective,C * sum{j in 1..m} wabs[j],errorTRAIN,TESTval;
#let vb := TESTval;
let vb := sum{i in TEST} abs(error[i]);
display C, eps >> out5c;
display va+vb;
display va,vb,va+vb >> out5c;

reset;
model curvefitCV.mod;
data ddd.dat;
let C := 1;
let eps := 0;
display C, eps;
let TRAIN := {1..n};
let TEST := {};
solve;
display w,b,objective,C * sum{j in 1..m} wabs[j],errorTRAIN;
display C, eps >> out5b;
display w,b >> out5b;
let TRAIN := {1..20};
let TEST := {((20)+1)..n};
solve;
display w,b,objective,C * sum{j in 1..m} wabs[j],errorTRAIN,TESTval;
#let va := TESTval;
let va := sum{i in TEST} abs(error[i]);
let TEST := {1..20};
let TRAIN := {((20)+1)..n};
solve;
display w,b,objective,C * sum{j in 1..m} wabs[j],errorTRAIN,TESTval;
#let vb := TESTval;
let vb := sum{i in TEST} abs(error[i]);
display C, eps >> out5c;
display va+vb;
display va,vb,va+vb >> out5c;

reset;
model curvefitCV.mod;
data ddd.dat;
let C := 0;
display C, eps;
let TRAIN := {1..n};
let TEST := {};
solve;
display w,b,objective,C * sum{j in 1..m} wabs[j],errorTRAIN;
display C, eps >> out5b;
display w,b >> out5b;
let TRAIN := {1..20};
let TEST := {((20)+1)..n};
solve;
display w,b,objective,C * sum{j in 1..m} wabs[j],errorTRAIN,TESTval;
#let va := TESTval;
let va := sum{i in TEST} abs(error[i]);
let TEST := {1..20};
let TRAIN := {((20)+1)..n};
solve;
display w,b,objective,C * sum{j in 1..m} wabs[j],errorTRAIN,TESTval;
#let vb := TESTval;
let vb := sum{i in TEST} abs(error[i]);
display C, eps >> out5c;
display va+vb;
display va,vb,va+vb >> out5c;

reset;
model curvefitCV.mod;
let C := 0;
let eps := 0.3;
data ddd.dat;
display C, eps;
let TRAIN := {1..n};
let TEST := {};
solve;
display w,b,objective,C * sum{j in 1..m} wabs[j],errorTRAIN;
display C, eps >> out5b;
display w,b >> out5b;
let TRAIN := {1..20};
let TEST := {((20)+1)..n};
solve;
display w,b,objective,C * sum{j in 1..m} wabs[j],errorTRAIN,TESTval;
#let va := TESTval;
let va := sum{i in TEST} abs(error[i]);
let TEST := {1..20};
let TRAIN := {((20)+1)..n};
solve;
display w,b,objective,C * sum{j in 1..m} wabs[j],errorTRAIN,TESTval;
#let vb := TESTval;
let vb := sum{i in TEST} abs(error[i]);
display C, eps >> out5c;
display va+vb;
display va,vb,va+vb >> out5c;

reset;
model curvefitCV.mod;
data ddd.dat;
let C := 0;
let eps := 0;
display C, eps;
let TRAIN := {1..n};
let TEST := {};
solve;
display w,b,objective,C * sum{j in 1..m} wabs[j],errorTRAIN;
display C, eps >> out5b;
display w,b >> out5b;
let TRAIN := {1..20};
let TEST := {((20)+1)..n};
solve;
display w,b,objective,C * sum{j in 1..m} wabs[j],errorTRAIN,TESTval;
#let va := TESTval;
let va := sum{i in TEST} abs(error[i]);
let TEST := {1..20};
let TRAIN := {((20)+1)..n};
solve;
display w,b,objective,C * sum{j in 1..m} wabs[j],errorTRAIN,TESTval;
#let vb := TESTval;
let vb := sum{i in TEST} abs(error[i]);
display C, eps >> out5c;
display va+vb;
display va,vb,va+vb >> out5c;

