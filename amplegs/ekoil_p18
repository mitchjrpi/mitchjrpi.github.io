###########################################################
#  Ecker & Kupferschmid, oil refinery example, p.18
#  Model file
###########################################################
set CRUDE;
set PROCESS;
set REFINED;

param  contractsize{REFINED} > 0;
param  crudequantities{CRUDE} > 0;

param  production{REFINED,PROCESS} > 0;
param  crudeuse{CRUDE,PROCESS} > 0;

param  price{REFINED};

var  x{PROCESS}  >= 0;

maximize profit: sum{i in REFINED}
     price[i]*(sum{j in PROCESS}production[i,j]*x[j]);

subject to contracts{i in REFINED}:
  sum{j in PROCESS} production[i,j]*x[j] >= contractsize[i];

subject to available{i in CRUDE}:
  sum{j in PROCESS} crudeuse[i,j]*x[j] <= crudequantities[i];
###########################################################
#  Data file
###########################################################
set PROCESS := old, new;
set CRUDE := crude1, crude2, crude3;
set REFINED := regular, super;

param: contractsize price :=
 regular   500        6
 super     300        9;

param: crudequantities :=
 crude1   1500
 crude2   1900
 crude3   1000;

param  production :
          new  old  :=
 regular   9    5
 super     7    9;

param  crudeuse :
          new  old  :=
 crude1    5    3
 crude2    7    9
 crude3    2    4;
###########################################################
#  Output
###########################################################
ampl: model ekoil_p18.mod;
ampl: data ekoil_p18.dat;
ampl data: solve;
MINOS 5.4: optimal solution found.
3 iterations, objective 31757.14286
ampl: display x;
x [*] :=
new  271.429
old    0
;
