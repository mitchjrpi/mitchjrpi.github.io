param v = 3;

param n = 10;

param c: 0  1  2  3  4  5  6  7  8  9 10 :=
      0  0 63 64 62 35 64 61 60 92 93 93
      1 63  0 62 65 62 63 63 60 13 92 91
      2 64 62  0 63 64 61 62 60 93 15 92
      3 62 65 63  0 63 64 62 60 96 93 14
      4 35 62 64 63  0  2  3 64 93 95 93
      5 64 63 61 64  2  0  3 62 94 93 92
      6 61 63 62 62  3  3  0 43 95 95 91
      7 60 60 60 60 64 62 43  0 94 93 93
      8 92 13 93 96 93 94 95 94  0 62 62
      9 93 92 15 93 95 93 95 93 62  0 63
     10 93 91 92 14 93 92 91 93 62 63  0  ;
     
param D = 40;

param d := 1 10 2 8 3 7 4 8 5 9 6 11 7 8 8 8 9 7 10 8;

let dmin := min {i in 1..n} d[i];

let demands := setof {i in 1..n} d[i]+Uniform(0,0.5);
let {i in 1..n} dsort[i] := floor(member(i,demands));

let maxtourlength := 0;
let used := 0;

for {i in 1..n} {
  let used := used + dsort[i];
  if used <= D then {
    let maxtourlength := i;
  }
}